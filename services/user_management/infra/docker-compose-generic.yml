services:
  mariadb:
    # options can be overwritten by successive docker compose file for
    # multiple runtime environments, e.g. dev / test / production
    image: mariadb:11-noble
    container_name: usrmgt-generic-mariadb
    environment:
      - DB_NAME=ecommerce_usermgt
    ports:
      # Maps port 3306 on the host to port 3307 in the container
      - "3306:3307"
    volumes:
      - ./mariadb-cfg/db_init.sh:/docker-entrypoint-initdb.d/db_init.sh:ro
  
  db-schema-migration:
    container_name: usrmgt-unknown-db-schema-migrate
    image: usrmgt-backend-base:latest
    # only consider images existing in local machine, do not pull from remote sites
    pull_policy: never
    profiles:
      - initialschema
      - initialstart
    restart: no
    environment:
      - DB_NAME=ecommerce_usermgt
      - DB_PORT=3307
    volumes:
      - ./db_schema_migration:/app/entry/run_my_app
    depends_on:
      # condition cannot be specified here because mariaDB container requires extra time to
      # get real database server ready for accepting inbound connections , neither
      # `service_started` or `service_completed_successfully` fits in such case.
      - mariadb
  
  db-initial-data-import:
    container_name: usrmgt-unknown-db-data-migrate
    image: usrmgt-backend-base:latest
    pull_policy: never
    profiles:
      - initialstart
    restart: no
    environment:
      - DB_NAME=ecommerce_usermgt
      - DB_PORT=3307
    volumes:
      - ./db_init_data_migration:/app/entry/run_my_app
    depends_on:
      db-schema-migration:
        condition: service_completed_successfully
  
  api-server-after-init-data:
    container_name: usrmgt-unknown-init-apisrv
    image: usrmgt-backend-base:latest
    pull_policy: never
    profiles:
      - initialstart
    restart: no
    environment:
      - DB_NAME=ecommerce_usermgt
      - DB_PORT=3307
    ports:
      - "8008:8008"
    depends_on:
      db-initial-data-import:
        condition: service_completed_successfully

