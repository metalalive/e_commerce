{
    "pid_file" : {
        "web_api"     :"tmp/proc/payment_app_server.pid",
        "rpc_consumer":"tmp/proc/payment_rpc_consumer.pid"
    },
    "logging" : {
        "handlers" : [
            {"alias": "std-output-forall",
             "min_level": "WARNING",
             "destination": "console"},
            {"alias": "errlog-file-web-api",
             "min_level": "INFO",
             "path": "tmp/log/test/payment_app_server.err",
             "destination": "localfs"}
        ],
        "loggers" : [
            {"alias": "payment::network",
             "handlers": ["std-output-forall", "errlog-file-web-api"],
             "level": "INFO"},
            {"alias": "payment::adapter::rpc::amqp",
             "handlers": ["errlog-file-web-api"],
             "level": "WARNING"},
            {"alias": "payment::adapter::repository::mariadb::charge",
             "handlers": ["std-output-forall","errlog-file-web-api"],
             "level": "INFO"},
            {"alias": "payment::adapter::repository::mariadb::merchant",
             "handlers": ["std-output-forall"],
             "level": "INFO"},
            {"alias": "payment::adapter::repository::mariadb::refund",
             "handlers": ["std-output-forall","errlog-file-web-api"],
             "level": "DEBUG"},
            {"alias": "payment::adapter::processor",
             "handlers": ["std-output-forall"],
             "level": "WARNING"},
            {"alias": "payment::adapter::processor::base_client",
             "handlers": ["std-output-forall"],
             "level": "INFO"},
            {"alias": "payment::adapter::processor::stripe",
             "handlers": ["errlog-file-web-api"],
             "level": "INFO"},
            {"alias": "payment::api::web::onboard",
             "handlers": ["std-output-forall", "errlog-file-web-api"],
             "level": "WARNING"},
            {"alias": "payment::api::web::charge",
             "handlers": ["std-output-forall"],
             "level": "WARNING"},
            {"alias": "payment::api::web::refund",
             "handlers": ["std-output-forall"],
             "level": "INFO"},
            {"alias": "payment::api::web::reporting",
             "handlers": ["std-output-forall"],
             "level": "WARNING"}
        ]
    },
    "listen": {
        "port": 8016,
        "host":"localhost",
        "max_failures": 3,
        "api_version": "0.1.0",
	"max_connections": 129,
        "cors": "common/data/cors.json",
        "routes": [
            {"path":"/store/{store_id}/onboard", "handler":"onboard_store"},
            {"path":"/store/{store_id}/onboard/status", "handler":"track_onboarding_status"},
            {"path":"/store/{store_id}/order/charges", "handler":"report_charge_lines"},
            {"path":"/charge", "handler":"create_new_charge"},
            {"path":"/charge/{charge_id}", "handler":"refresh_charge_status"},
            {"path":"/charge/{charge_id}/capture", "handler":"capture_authed_charge"},
            {"path":"/refund/{order_id}/complete/{store_id}", "handler":"complete_refund"}
        ]
    },
    "limit_req_body_in_bytes": 10485760,
    "num_workers": 2,
    "stack_sz_kb": 256,
    "data_store": [
	{
	    "_type": "DbServer",
	    "alias": "db-write-primary",
	    "srv_type": "MariaDB",
	    "db_name": "test_ecommerce_payment",
	    "confidentiality_path": "backend_apps/databases/payment_service",
	    "max_conns": 4,
	    "acquire_timeout_secs": 17,
	    "idle_timeout_secs": 35
	},
	{
	    "_type": "DbServer",
	    "alias": "db-read-replica",
	    "srv_type": "MariaDB",
	    "db_name": "test_ecommerce_payment_replica_1",
	    "confidentiality_path": "backend_apps/databases/payment_service",
	    "max_conns": 5,
	    "acquire_timeout_secs": 29,
	    "idle_timeout_secs": 45
	}
    ],
    "rpc": {
	"handler_type": "Mock",
	"test_data": "tests/integration/examples/rpc_test_data.json"
    },
    "third_parties": [
        {
            "mode": "test",
            "name": "Stripe",
	        "data_src": "tests/integration/examples/no-mock-data.json"
        }
    ],
    "auth": {
	"keystore_url": "http://localhost:8008/jwks",
	"update_interval_minutes": 60
    },
    "confidentiality": {
	"source": "UserSpace",
	"sys_path": "common/data/secrets.json"
    }
}
