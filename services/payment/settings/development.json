{
    "pid_file" : {
        "web_api"     :"tmp/proc/payment_app_server.pid",
        "rpc_consumer":"tmp/proc/payment_rpc_consumer.pid"
    },
    "logging" : {
        "handlers" : [
            {"alias": "std-output-forall",
             "min_level": "WARNING",
             "destination": "console"},
            {"alias": "errlog-file-web-api",
             "min_level": "WARNING",
             "path": "tmp/log/dev/payment_app_server.err",
             "destination": "localfs"},
            {"alias": "errlog-file-cron-job",
             "min_level": "INFO",
             "path": "tmp/log/dev/payment_cronjob.err",
             "destination": "localfs"}
        ],
        "loggers" : [
            {"alias": "payment::network",
             "handlers": ["std-output-forall", "errlog-file-web-api"],
             "level": "WARNING"},
            {"alias": "payment::api::web::charge",
             "handlers": ["errlog-file-web-api"],
             "level": "INFO"},
            {"alias": "payment::api::web::onboard",
             "handlers": ["errlog-file-web-api"],
             "level": "INFO"},
            {"alias": "payment::api::web::refund",
             "handlers": ["errlog-file-web-api"],
             "level": "WARNING"},
            {"alias": "payment::api::web::reporting",
             "handlers": ["errlog-file-web-api"],
             "level": "WARNING"},
            {"alias": "payment::adapter::rpc::amqp",
             "handlers": ["errlog-file-web-api"],
             "level": "WARNING"},
            {"alias": "payment::adapter::repository::mariadb::charge",
             "handlers": ["std-output-forall","errlog-file-web-api"],
             "level": "WARNING"},
            {"alias": "payment::adapter::repository::mariadb::merchant",
             "handlers": ["std-output-forall","errlog-file-web-api"],
             "level": "INFO"},
            {"alias": "payment::adapter::repository::mariadb::refund",
             "handlers": ["std-output-forall"],
             "level": "INFO"},
            {"alias": "payment::adapter::processor",
             "handlers": ["errlog-file-web-api"],
             "level": "WARNING"},
            {"alias": "payment::adapter::processor::base_client",
             "handlers": ["std-output-forall","errlog-file-web-api"],
             "level": "WARNING"},
            {"alias": "payment::adapter::processor::stripe",
             "handlers": ["errlog-file-web-api"],
             "level": "INFO"},
            {"alias": "web",
             "level": "DEBUG",
             "handlers": ["errlog-file-web-api", "std-output-forall"]},
            {"alias": "sync_refund_req",
             "level": "DEBUG",
             "handlers": ["errlog-file-cron-job", "std-output-forall"]}
        ]
    },
    "listen": {
        "port": 8015,
        "host":"localhost",
        "max_failures": 3,
        "api_version": "0.1.0",
	"max_connections": 127,
        "cors": "common/data/cors.json",
        "routes": [
            {"path":"/store/{store_id}/onboard", "handler":"onboard_store"},
            {"path":"/store/{store_id}/onboard/status", "handler":"track_onboarding_status"},
            {"path":"/store/{store_id}/order/charges", "handler":"report_charge_lines"},
            {"path":"/charge", "handler":"create_new_charge"},
            {"path":"/charge/{charge_id}", "handler":"refresh_charge_status"},
            {"path":"/charge/{charge_id}/capture", "handler":"capture_authed_charge"},
            {"path":"/refund/{order_id}/complete/{store_id}", "handler":"complete_refund"}
        ]
    },
    "limit_req_body_in_bytes": 10485760,
    "num_workers": 2,
    "stack_sz_kb": 256,
    "data_store": [
	{
	    "_type": "DbServer",
	    "alias": "db-write-primary",
	    "srv_type": "MariaDB",
	    "db_name": "ecommerce_payment",
	    "confidentiality_path": "backend_apps/databases/payment_service",
	    "max_conns": 4,
	    "acquire_timeout_secs": 17,
	    "idle_timeout_secs": 35
	},
	{
	    "_type": "DbServer",
	    "alias": "db-read-replica",
	    "srv_type": "MariaDB",
	    "db_name": "ecommerce_payment_replica_1",
	    "confidentiality_path": "backend_apps/databases/payment_service",
	    "max_conns": 6,
	    "acquire_timeout_secs": 25,
	    "idle_timeout_secs": 55
	}
    ],
    "rpc": {
	"handler_type": "AMQP",
	"bindings": [
	    {
                "queue": "rpc_orderproc_replica_payment",
                "exchange": "rpc-default-allapps",
                "routing_key": "rpc.order.order_reserved_replica_payment",
                "ensure_declare": false,
                "subscribe": false,
                "durable": true,
		"ttl_secs": 60,
		"max_length": 700,
		"reply": {
                    "queue": "rpc.reply.payment.order_replica",
                    "correlation_id_prefix": "rpc.payment.get_order_info.corr_id",
                    "durable": true,
		    "max_length": 2090,
                    "ttl_secs": 16
                }
	    },
	    {
                "queue": "rpc_orderproc_update_payment_status",
                "exchange": "rpc-default-allapps",
	        "routing_key": "rpc.order.order_reserved_update_payment",
		"ensure_declare": false,
                "subscribe": false,
                "durable": true,
		"ttl_secs": 48,
		"max_length": 700,
	        "reply": {
                    "queue": "rpc.reply.payment.sync_oline_paid",
                    "correlation_id_prefix": "rpc.payment.sync_oline_paid.corr_id",
                    "durable": true,
		    "max_length": 2090,
                    "ttl_secs": 15
		}
	    },
	    {
                "queue": "rpc_storefront_get_profile",
                "exchange": "rpc-default-allapps",
	        "routing_key": "rpc.storefront.get_profile",
		"ensure_declare": false,
                "subscribe": false,
		"python_celery_task": "store.api.rpc.get_shop_profile",
                "durable": true,
		"ttl_secs": 999,
		"max_length": 1000,
	        "reply": {
                    "queue": "rpc.reply.payment.storefront_profile",
                    "correlation_id_prefix": "rpc.payment.storefront_profile.corr_id",
                    "durable": true,
		    "max_length": 1000,
                    "ttl_secs": 26
		}
	    },
	    {
                "queue": "rpc_orderproc_replica_refund",
                "exchange": "rpc-default-allapps",
                "routing_key": "rpc.order.order_returned_replica_refund",
                "ensure_declare": false,
                "subscribe": false,
                "durable": true,
		"ttl_secs": 60,
		"max_length": 455,
	        "reply": {
                    "queue": "rpc.reply.payment.sync_order_refund",
                    "correlation_id_prefix": "rpc.payment.sync_order_refund.corr_id",
                    "durable": true,
		    "max_length": 455,
                    "ttl_secs": 60
		}
	    }
	],
	"attributes": {
	    "vhost":"/",
	    "max_channels": 128,
	    "timeout_secs": 15
	},
	"max_connections": 3,
	"confidential_id": "amqp_broker/0"
    },
    "auth": {
	"keystore_url": "http://localhost:8008/jwks",
	"update_interval_minutes": 55
    },
    "third_parties": [
        {
            "mode": "dev",
            "name": "Stripe",
            "host": "api.stripe.com",
            "port": 443,
	        "confidentiality_path": "backend_apps/secret_key/staff/Stripe"
        }
    ],
    "confidentiality": {
	"source": "UserSpace",
	"sys_path": "common/data/secrets.json"
    }
}
