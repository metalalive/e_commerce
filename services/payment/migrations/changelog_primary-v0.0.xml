<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:pro="http://www.liquibase.org/xml/ns/pro"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.6.xsd
    http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-4.6.xsd ">

    <changeSet id="init" author="T.H. Wu">
        <tagDatabase tag="0.0.0" />
    </changeSet>
    <changeSet id="add_tables__order_replica_toplvl_meta" author="T.H.">
        <comment>
            TODO
            - consider new column for number of refunds
        </comment>
        <sql dbms="mariadb">
            CREATE TABLE  `order_toplvl_meta` (
                `usr_id`   INT UNSIGNED NOT NULL,
                `o_id`     BINARY(16) NOT NULL,
                `create_time`   DATETIME  NOT NULL,
                `num_charges`   INT UNSIGNED NOT NULL DEFAULT 0,
                PRIMARY KEY (`usr_id`,`o_id`)
            );
        </sql>
        <rollback>
            DROP TABLE `order_toplvl_meta`;
        </rollback>
    </changeSet>
    <changeSet id="add_tables__orderbill_replica_contact" author="T.H.">
        <comment> </comment>
        <sql dbms="mariadb">
            CREATE TABLE  `orderbill_contact` (
                `o_id`   BINARY(16) NOT NULL PRIMARY KEY,
                `first_name`  VARCHAR(32) CHARACTER SET utf8 NOT NULL,
                `last_name`   VARCHAR(32) CHARACTER SET utf8 NOT NULL,
                `emails`   TEXT  CHARACTER SET utf8 NOT NULL,
                `phones`   TEXT  CHARACTER SET utf8 NOT NULL
            );
        </sql>
        <rollback>
            DROP TABLE `orderbill_contact`;
        </rollback>
    </changeSet>
    <changeSet id="add_tables__orderbill_replica_phyaddr" author="T.H.">
        <comment> </comment>
        <sql dbms="mariadb">
            CREATE TABLE  `orderbill_phyaddr` (
                `o_id`   BINARY(16) NOT NULL PRIMARY KEY,
                `country`   ENUM('TW','TH','IN','ID','US') NOT NULL, 
                `region`    VARCHAR(32)   CHARACTER SET utf8  NOT NULL,
                `city`      VARCHAR(32)   CHARACTER SET utf8  NOT NULL,
                `distinct`  VARCHAR(64)   CHARACTER SET utf8  NOT NULL,
                `street`    VARCHAR(32)   CHARACTER SET utf8  DEFAULT NULL,
                `detail`    VARCHAR(256)  CHARACTER SET utf8  NOT NULL
            );
        </sql>
        <rollback>
            DROP TABLE `orderbill_phyaddr`;
        </rollback>
    </changeSet>
    <changeSet id="add_tables__orderline_replica_detail" author="T.H.">
        <comment> </comment>
        <sql dbms="mariadb">
            CREATE TABLE  `order_line_detail` (
                `o_id`   BINARY(16) NOT NULL,
                `store_id`      INT UNSIGNED NOT NULL,
                `product_type`  ENUM('1', '2') NOT NULL, 
                `product_id`    BIGINT UNSIGNED NOT NULL,
                `price_unit`    INT UNSIGNED NOT NULL,
                `price_total_rsved`  INT UNSIGNED NOT NULL,
                `price_total_paid`   INT UNSIGNED NOT NULL,
                `qty_rsved`    INT UNSIGNED NOT NULL,
                `qty_paid`     INT UNSIGNED NOT NULL,
                `rsved_until`  DATETIME  NOT NULL,
                PRIMARY KEY (`o_id`, `store_id`, `product_type`, `product_id`)
            );
        </sql>
        <rollback>
            DROP TABLE `order_line_detail`;
        </rollback>
    </changeSet>
    <changeSet id="tag_version_0.0.1" author="T.H.">
        <tagDatabase tag="0.0.1" />
    </changeSet>

    <changeSet id="add_tables__charge_buyer_toplvl" author="T.H.">
        <comment>
           TODO
           - more enum members as this service supports new payment methods.
        </comment>
        <sql dbms="mariadb">
            CREATE TABLE  `charge_buyer_toplvl` (
                `usr_id`        INT UNSIGNED NOT NULL,
                `create_time`   DATETIME  NOT NULL,
                `order_id`      BINARY(16) NOT NULL,
                `state`    ENUM('ProcessorAccepted', 'ProcessorCompleted',
                               'OrderAppSynced', 'OrderAppExpired') NOT NULL,
                `processor_accepted_time`    DATETIME(3)  NULL,
                `processor_completed_time`   DATETIME(3)  NULL,
                `orderapp_synced_time`   DATETIME(3)  NULL,
                `pay_method`    ENUM('Stripe') NOT NULL,
                PRIMARY KEY (`usr_id`,`create_time`)
            );
        </sql>
        <rollback>
            DROP TABLE `charge_buyer_toplvl`;
        </rollback>
    </changeSet>
    <changeSet id="add_tables__charge_line" author="T.H.">
        <comment>
           - in this service, buyer and seller share the same charge instance
           TODO
           - add currency and exchange rate on creating the order line
           - add fields for seller and pay-out
        </comment>
        <sql dbms="mariadb">
            CREATE TABLE  `charge_line` (
                `buyer_id`        INT UNSIGNED NOT NULL,
                `create_time`   DATETIME  NOT NULL,
                `store_id`      INT UNSIGNED NOT NULL,
                `product_type`  ENUM('1', '2') NOT NULL, 
                `product_id`    BIGINT UNSIGNED NOT NULL,
                `price_unit`    INT UNSIGNED NOT NULL,
                `price_total`   INT UNSIGNED NOT NULL,
                `qty`           INT UNSIGNED NOT NULL,
                PRIMARY KEY (`buyer_id`,`create_time`,`store_id`,`product_type`,`product_id`),
                CONSTRAINT `c_fk_charge_buyer_toplvl_id_0` FOREIGN KEY (`buyer_id`, `create_time`)
                    REFERENCES `charge_buyer_toplvl`(`usr_id`,`create_time`) ON UPDATE CASCADE ON DELETE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE `charge_line`;
        </rollback>
    </changeSet>
    
    <changeSet id="tag_version_0.0.2" author="T.H.">
        <tagDatabase tag="0.0.2" />
    </changeSet>
    <changeSet id="modify_pk__order_replica_toplvl_meta" author="T.H.">
        <comment>
            remove `usr_id` from primary key of order replica top-level metadata, there are use cases
            where sellers need to query specific order metadata without knowing buyers' ID.

            TODO,
            - consider the scenario when a seller needs to query specific order
            - consider performance improvement if data grows in the table, this application
              might need another index that looks up all orders by given user (buyer) id
            - note the application inserts records to this table once and then never modifies
              them, users may query their order history several times, such use case is
              write-once and read-many-times, more indices in database may cause slow
              insertion but fast read
        </comment>
        <sql dbms="mariadb">
            ALTER TABLE `order_toplvl_meta` DROP PRIMARY KEY;
            ALTER TABLE `order_toplvl_meta` ADD PRIMARY KEY (`o_id`);
        </sql>
        <rollback>
            ALTER TABLE `order_toplvl_meta` DROP PRIMARY KEY;
            ALTER TABLE `order_toplvl_meta` ADD PRIMARY KEY (`usr_id`,`o_id`);
        </rollback>
    </changeSet>
    <changeSet id="rename_usr_id__order_replica_toplvl_meta" author="T.H.">
        <comment>
            rename `usr_id` to `buyer_id`
        </comment>
        <sql dbms="mariadb">
            ALTER TABLE `order_toplvl_meta` RENAME COLUMN `usr_id` TO `buyer_id`;
        </sql>
        <rollback>
            ALTER TABLE `order_toplvl_meta` RENAME COLUMN `buyer_id` TO `usr_id`;
        </rollback>
    </changeSet>
    
    <changeSet id="tag_version_0.0.3" author="T.H.">
        <tagDatabase tag="0.0.3" />
    </changeSet>
    <changeSet id="modify_price_type__orderline_replica_detail" author="T.H.">
        <comment>
            - 2 digits are saved as fractional part of decimal value, this is due to the limit
              of the amount represented in each currency supported in this application. Check
              `CurrencyDto::amount_fraction_scale()` in `services/common/rust/src/api/dto.rs`
            - Note the amount seen in both of frontend and backend application has to consistent.
            - it should be safe to directly change the column from integer to decimal type,
              mariaDB automatically converts the price amount of existing rows to decimal value
              with 0 digit after the decimal point.
            - this migration operation should never be rolled back , because converting back to
              integer column will lose fractional part of decimal value, that might lead to serious
              problems in business domain.
        </comment>
        <sql dbms="mariadb">
            ALTER TABLE `order_line_detail` MODIFY   `price_unit`  DECIMAL(16,2) UNSIGNED NOT NULL;
            ALTER TABLE `order_line_detail` MODIFY   `price_total_rsved`  DECIMAL(16,2) UNSIGNED NOT NULL;
            ALTER TABLE `order_line_detail` MODIFY   `price_total_paid`   DECIMAL(16,2) UNSIGNED NOT NULL;
        </sql>
        <rollback />
    </changeSet>
    <changeSet id="rename_price_columns__orderline_replica_detail" author="T.H.">
        <comment>
            rename the amount columns `price_xxx` to `amt_xxx`
        </comment>
        <sql dbms="mariadb">
            ALTER TABLE `order_line_detail` RENAME COLUMN `price_unit` TO `amt_unit`;
            ALTER TABLE `order_line_detail` RENAME COLUMN `price_total_rsved` TO `amt_total_rsved`;
            ALTER TABLE `order_line_detail` RENAME COLUMN `price_total_paid`  TO `amt_total_paid`;
        </sql>
        <rollback>
            ALTER TABLE `order_line_detail` RENAME COLUMN `amt_unit` TO `price_unit`;
            ALTER TABLE `order_line_detail` RENAME COLUMN `amt_total_rsved` TO `price_total_rsved`;
            ALTER TABLE `order_line_detail` RENAME COLUMN `amt_total_paid`  TO `price_total_paid`;
        </rollback>
    </changeSet>
    
    <changeSet id="tag_version_0.0.4" author="T.H.">
        <tagDatabase tag="0.0.4" />
    </changeSet>
    <changeSet id="modify_price_type__charge_line" author="T.H.">
        <comment/>
        <sql dbms="mariadb">
            ALTER TABLE `charge_line` MODIFY  `price_unit`  DECIMAL(16,2) UNSIGNED NOT NULL;
            ALTER TABLE `charge_line` MODIFY  `price_total` DECIMAL(16,2) UNSIGNED NOT NULL;
        </sql>
        <rollback/>
    </changeSet>
    <changeSet id="rename_price_columns__charge_line" author="T.H.">
        <comment/>
        <sql dbms="mariadb">
            ALTER TABLE `charge_line` RENAME COLUMN `price_unit` TO `amt_unit`;
            ALTER TABLE `charge_line` RENAME COLUMN `price_total` TO `amt_total`;
        </sql>
        <rollback>
            ALTER TABLE `charge_line` RENAME COLUMN `amt_unit` TO `price_unit`;
            ALTER TABLE `charge_line` RENAME COLUMN `amt_total` TO `price_total`;
        </rollback>
    </changeSet>
    
    <changeSet id="tag_version_0.0.5" author="T.H.">
        <tagDatabase tag="0.0.5" />
    </changeSet>
    <changeSet id="add_table__order_currency_snapshot" author="T.H.">
        <comment>
            `usr-id` can be either buyer or seller,
            TODO, redesign this in case `buyer-user-id` and `seller / merchant id` become different types
        </comment>
        <sql dbms="mariadb">
            CREATE TABLE  `order_currency_snapshot` (
                `o_id`     BINARY(16) NOT NULL,
                `usr_id`   INT UNSIGNED NOT NULL,
                `label`    ENUM('USD','TWD','INR','IDR','THB') NOT NULL,
                `ex_rate`  DECIMAL(12, 4) SIGNED NOT NULL,
                PRIMARY KEY (`o_id`,`usr_id`)
            );
        </sql>
        <rollback>
            DROP TABLE `order_currency_snapshot`;
        </rollback>
    </changeSet>
    
    <changeSet id="tag_version_0.0.6" author="T.H.">
        <tagDatabase tag="0.0.6" />
    </changeSet>
    <changeSet id="add_method_detail__charge_buyer_toplvl" author="T.H.">
        <comment>
            - Different 3rd-party processors have defined different objects / entities for pay-in flow,
              which have different structure.
            - In this application, my current approach is to simply serialise whatever response detail
              from external 3rd-party processors to a table column `method_detail`
            - This application does not query any field in the response detail, it should be sufficient
              to save that detail to a single column, rather than create dedicate table for each specific
              3rd-party processor
        </comment>
        <sql dbms="mariadb">
            ALTER TABLE `charge_buyer_toplvl` ADD COLUMN `detail_3rdparty`  TEXT  CHARACTER SET utf8 NOT NULL;
        </sql>
        <rollback>
            ALTER TABLE `charge_buyer_toplvl` DROP COLUMN `detail_3rdparty`;
        </rollback>
    </changeSet>
    
    <changeSet id="tag_version_0.0.7" author="T.H.">
        <tagDatabase tag="0.0.7" />
    </changeSet>
    <changeSet id="remove_orderappexpired_state__charge_buyer_toplvl" author="T.H.">
        <comment>
            remove enum variant `OrderAppExpired` in `state`, it is no longer needed in the
            backend application code.
        </comment>
        <sql dbms="mariadb">
            ALTER TABLE  `charge_buyer_toplvl` MODIFY COLUMN `state`
                ENUM('ProcessorAccepted', 'ProcessorCompleted', 'OrderAppSynced')
                NOT NULL;
        </sql>
        <rollback>
            ALTER TABLE  `charge_buyer_toplvl` MODIFY COLUMN `state`
                ENUM('ProcessorAccepted', 'ProcessorCompleted', 'OrderAppSynced', 'OrderAppExpired')
                NOT NULL;
        </rollback>
    </changeSet>
    
    <changeSet id="tag_version_0.0.8" author="T.H.">
        <tagDatabase tag="0.0.8" />
    </changeSet>
    <changeSet id="remove_qty_amount_paid__orderline_detail" author="T.H.">
        <comment>
            The 2 columns have never been actually used in the application,
            I don't rollback the schema table in this change set
        </comment>
        <sql dbms="mariadb">
            ALTER TABLE `order_line_detail` DROP COLUMN IF EXISTS `amt_total_paid`;
            ALTER TABLE `order_line_detail` DROP COLUMN IF EXISTS `qty_paid`;
        </sql>
        <rollback/>
    </changeSet>
    
    <changeSet id="tag_version_0.0.9" author="T.H.">
        <tagDatabase tag="0.0.9" />
    </changeSet>
    <changeSet id="add_tables_merchant_profile" author="T.H.">
        <comment>
            Tables for recording basic profile and 3rd-party processors supported by merchants.
            Note the column `id` indicates `store-id` in `storefront` service
        </comment>
        <sql dbms="mariadb">
            CREATE TABLE `merchant_profile`(
                `id`      INT UNSIGNED NOT NULL PRIMARY KEY,
                `name`    VARCHAR(128)  CHARACTER SET utf8  NOT NULL,
                `supervisor_id`  INT UNSIGNED NOT NULL,
                `staff_ids`      TEXT CHARACTER SET ascii  NOT NULL,
                `last_update`    DATETIME NOT NULL
            );
        </sql>
        <rollback>
            DROP TABLE `merchant_profile`;
        </rollback>
    </changeSet>
    <changeSet id="add_tables_merchant_3party_info" author="T.H.">
        <sql dbms="mariadb">
            CREATE TABLE `merchant_3party`(
                `sid`      INT UNSIGNED NOT NULL,
                `method`  ENUM('Stripe') NOT NULL,
                `detail`  TEXT CHARACTER SET utf8 NOT NULL,
                PRIMARY KEY (`sid`,`method`),
                CONSTRAINT `c_fk_merchant_profile_id_0`  FOREIGN KEY (`sid`)
                    REFERENCES `merchant_profile`(`id`) ON UPDATE CASCADE ON DELETE CASCADE
            );
        </sql>
        <rollback>
            DROP TABLE `merchant_3party`;
        </rollback>
    </changeSet>
    <changeSet id="tag_version_0.0.10" author="T.H.">
        <tagDatabase tag="0.0.10" />
    </changeSet>
    <changeSet id="add_table__payout_meta" author="T.H.">
        <comment>
            - the columns `buyer_usr_id` and `charged_time` are respectively `usr_id` and `create_time` in another table `charge_buyer_toplvl`
            - the column `store-id` indicates identifier of specific merchant (from store service) 
            - `amount_base` indicates amount to pay out in base currency (USD in this project)
        </comment>
        <sql dbms="mariadb">
            CREATE TABLE `payout_meta`(
                `buyer_usr_id`   INT UNSIGNED NOT NULL,
                `charged_time`   DATETIME  NOT NULL,
                `store_id`       INT UNSIGNED NOT NULL,
                `create_time`    DATETIME  NOT NULL,
                `storestaff_usr_id`  INT UNSIGNED NOT NULL,
                `order_id`         BINARY(16) NOT NULL,
                `amount_base`      DECIMAL(16,2)  UNSIGNED NOT NULL,
                `amount_merchant`  DECIMAL(16,2)  UNSIGNED NOT NULL,
                `label3party`      ENUM('Stripe') NOT NULL,
                PRIMARY KEY (`buyer_usr_id`,`charged_time`,`store_id`)
            );
        </sql>
        <rollback>
            DROP TABLE `payout_meta`;
        </rollback>
    </changeSet>
    <changeSet id="add_table__payout_3party_stripe" author="T.H.">
        <comment>
            Following columns indicate some concepts in Stripe API server
            - `tx_grp` : transfer group
            - `acct_id` : Connected Account ID
            Note the amount for payout is always present in base currency (USD)
        </comment>
        <sql dbms="mariadb">
            CREATE TABLE `payout_3party_stripe`(
                `buyer_usr_id`   INT UNSIGNED NOT NULL,
                `charged_time`   DATETIME  NOT NULL,
                `store_id`       INT UNSIGNED NOT NULL,
                `tx_grp`    VARCHAR(128)  CHARACTER SET ascii  NOT NULL,
                `acct_id`   VARCHAR(128)  CHARACTER SET ascii  NOT NULL,
                `transfer_id`  VARCHAR(128)  CHARACTER SET ascii  NOT NULL,
                `amount`  DECIMAL(16,2)  UNSIGNED NOT NULL,
                PRIMARY KEY (`buyer_usr_id`,`charged_time`,`store_id`)
            );
        </sql>
        <rollback>
            DROP TABLE `payout_3party_stripe`;
        </rollback>
    </changeSet>
    <changeSet id="tag_version_0.0.11" author="T.H.">
        <tagDatabase tag="0.0.11" />
    </changeSet>
    <changeSet id="remove_amount_merchant__payout_meta" author="T.H.">
        <comment>
            In this payment application, the payout amount to each merchant with different currencies can be derived from buyer's currency, this means
            - it is no longer necessary to persist the amount in base currency (USD) and merchant's currency
            - instead I persist the amount in buyer's currency in database, since currency snapshot has been already saved within the order (otherwise it will be data corruption)
        </comment>
        <sql dbms="mariadb">
            ALTER TABLE `payout_meta` DROP COLUMN `amount_merchant`;
            ALTER TABLE `payout_meta` RENAME COLUMN `amount_base` TO `amount_buyer`;
        </sql>
        <rollback>
            ALTER TABLE `payout_meta` RENAME COLUMN `amount_buyer` TO `amount_base`;
            ALTER TABLE `payout_meta` ADD COLUMN `amount_merchant`  DECIMAL(16,2)  UNSIGNED NOT NULL;
        </rollback>
    </changeSet>
    <changeSet id="tag_version_0.0.12" author="T.H.">
        <tagDatabase tag="0.0.12" />
    </changeSet>
    <changeSet id="add_table__oline_refund_req" author="T.H.">
        <comment>
        </comment>
        <sql dbms="mariadb">
            CREATE TABLE `oline_refund_req`(
                `o_id`      BINARY(16) NOT NULL,
                `store_id`  INT UNSIGNED NOT NULL,
                `product_type`  ENUM('1', '2') NOT NULL, 
                `product_id`    BIGINT UNSIGNED NOT NULL,
                `create_time`   DATETIME   NOT NULL,
                `amt_unit`    DECIMAL(16,2) NOT NULL,
                `amt_total`   DECIMAL(16,2) NOT NULL,
                `qty`    INT UNSIGNED NOT NULL,
                PRIMARY KEY (`o_id`,`store_id`,`product_type`,`product_id`, `create_time`)
            );
        </sql>
        <rollback>
            DROP TABLE `oline_refund_req`;
        </rollback>
    </changeSet>
    <changeSet id="add_table__job_scheduler" author="T.H.">
        <comment>
            record properties of each cron job, e.g. last time executed
        </comment>
        <sql dbms="mariadb">
            CREATE TABLE `job_scheduler`(
                `label`     VARCHAR(32)  CHARACTER SET ascii  PRIMARY KEY NOT NULL,
                `last_update`  DATETIME(3)   NOT NULL
            );
        </sql>
        <rollback>
            DROP TABLE `job_scheduler`;
        </rollback>
    </changeSet>
    <changeSet id="tag_version_0.0.13" author="T.H.">
        <tagDatabase tag="0.0.13" />
    </changeSet>
    <changeSet id="rename_column_chargeline__amount_qty_original" author="T.H.">
        <comment/>
        <sql dbms="mariadb">
            ALTER TABLE `charge_line` RENAME COLUMN `amt_unit` TO `amt_orig_unit`,
                RENAME COLUMN `amt_total` TO `amt_orig_total`,
                RENAME COLUMN `qty` TO `qty_orig`;
        </sql>
        <rollback>
            ALTER TABLE `charge_line` RENAME COLUMN `amt_orig_unit` TO `amt_unit`,
                RENAME COLUMN `amt_orig_total` TO `amt_total`,
                RENAME COLUMN `qty_orig` TO `qty`;
        </rollback>
    </changeSet>
    <changeSet id="add_column_chargeline__amount_qty_refunded" author="T.H.">
        <comment>
            new columns for amount and quantities which have been refunded
            (or rejected to refund) so far
        </comment>
        <sql dbms="mariadb">
            ALTER TABLE `charge_line` ADD COLUMN `qty_rej`  INT UNSIGNED NOT NULL,
                ADD COLUMN `qty_rfnd`  INT UNSIGNED NOT NULL,
                ADD COLUMN `amt_rfnd_unit`   DECIMAL(16,2)  UNSIGNED NOT NULL,
                ADD COLUMN `amt_rfnd_total`  DECIMAL(16,2)  UNSIGNED NOT NULL;
        </sql>
        <rollback>
            ALTER TABLE `charge_line` DROP COLUMN `amt_rfnd_unit`,
                DROP COLUMN `amt_rfnd_total`, DROP COLUMN `qty_rfnd`,
                DROP COLUMN `qty_rej`;
        </rollback>
    </changeSet>
    <changeSet id="tag_version_0.0.14" author="T.H.">
        <tagDatabase tag="0.0.14" />
    </changeSet>
    <changeSet id="rename_amount_qty__oline_refund_req" author="T.H.">
        <comment/>
        <sql dbms="mariadb">
            ALTER TABLE `oline_refund_req` RENAME COLUMN `amt_unit` TO `amt_req_unit`,
                RENAME COLUMN `amt_total` TO `amt_req_total`,
                RENAME COLUMN `qty` TO `qty_req`;
        </sql>
        <rollback>
            ALTER TABLE `oline_refund_req` RENAME COLUMN `amt_req_unit` TO `amt_unit`,
                RENAME COLUMN `amt_req_total` TO `amt_total`,
                RENAME COLUMN `qty_req` TO `qty`;
        </rollback>
    </changeSet>
    <changeSet id="add_resolution__oline_refund_req" author="T.H.">
        <comment>
            add columns which represent approval or rejection for refund request on each order line,
            the word `aprv` in column name means `approval`, means merchant accepted to refund the
            order line
        </comment>
        <sql dbms="mariadb">
            ALTER TABLE `oline_refund_req`
                ADD COLUMN `qty_rej_fraud`  INT UNSIGNED NOT NULL,
                ADD COLUMN `qty_rej_damage` INT UNSIGNED NOT NULL,
                ADD COLUMN `qty_aprv`       INT UNSIGNED NOT NULL,
                ADD COLUMN `amt_aprv_unit`   DECIMAL(16,2)  UNSIGNED NOT NULL,
                ADD COLUMN `amt_aprv_total`  DECIMAL(16,2)  UNSIGNED NOT NULL;
        </sql>
        <rollback>
            ALTER TABLE `oline_refund_req` DROP COLUMN `amt_aprv_unit`,
                DROP COLUMN `amt_aprv_total`, DROP COLUMN `qty_aprv`,
                DROP COLUMN `qty_rej_fraud`, DROP COLUMN `qty_rej_damage`;
        </rollback>
    </changeSet>

    <changeSet id="tag_version_0.0.15" author="T.H.">
        <tagDatabase tag="0.0.15" />
    </changeSet>
</databaseChangeLog>
