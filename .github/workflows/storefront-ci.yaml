name: storefront continuous integration
on:
  pull_request:
    branches:
      - 'master'
    paths:
      - '.github/workflows/storefront-ci.yaml'
      - 'services/common/python/**'
      - 'services/store/**'

# due to this long-time unresolved issue, it is safe to put tasks into one
# big job running sequentially, and give up nicely running simulteneous jobs.
# https://github.com/actions/checkout/issues/19
jobs:
    lint-check:
      if: startsWith(github.head_ref, 'storefront-dev/')
      runs-on: ubuntu-24.04
      steps:
      - uses: actions/checkout@v4 # checkout codebase from github
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.13.7
      
      - name: Install ruff linter
        run: python3.13 -m pip install ruff==0.13.0
      - name: lint check
        working-directory: services/store
        run: |
            ruff check  ./src/ ./tests/  ./settings/ 

    build-docker-image:
      if: startsWith(github.head_ref, 'storefront-dev/')
      needs: lint-check
      runs-on: ubuntu-24.04
      steps:
        - uses: actions/checkout@v4
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Build Docker image and export to tar
          uses: docker/build-push-action@v5
          with:
            context: services
            file: services/store/infra/Dockerfile
            outputs: type=docker,dest=${{ runner.temp }}/storefront-backend-base.tar
            tags: storefront-backend-base:latest
            push: false
            cache-from: type=gha
            cache-to: type=gha,mode=max
        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: storefront-docker-image
            path: ${{ runner.temp }}/storefront-backend-base.tar
            retention-days: 1

    init-env-then-test:
      if: startsWith(github.head_ref, 'storefront-dev/')
      runs-on: ubuntu-24.04
      needs: build-docker-image
      steps:
      - uses: actions/checkout@v4 # checkout codebase from github
      - name: Build Docker image for database and export to tar
        uses: docker/build-push-action@v5
        with:
          context: infra
          file: infra/mariadb-ext.dockerfile
          outputs: type=docker
          tags: mariadb-ext:11-noble
          push: false
      - name: Download docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: storefront-docker-image
          path: ${{ runner.temp }}
      - name: Load docker image
        run: |
            docker load --input ${{ runner.temp }}/storefront-backend-base.tar
            docker image list
      
      - name: set up database persistence path
        working-directory: ${{ github.workspace }}
        # the user `mariadb` in docker container has UID 999 and GID 999 
        run: |
          mkdir -p installed/mariadb/data  installed/mariadb/log
          sudo chown --recursive 999:999 installed/mariadb

      - name: Create test environment file
        working-directory: services/store/infra
        run: |
          echo "DB_HOST=storefront-test-mariadb" > ./container-test.env
          echo "MARIADB_ROOT_PASSWORD=DB_PASSWORD" >> ./container-test.env
          echo "SITEDBA_UNAME=DB_USERNAME"    >> ./container-test.env
          echo "SITEDBA_PASSWORD=DB_PASSWORD" >> ./container-test.env
          echo "DB_APP_UNAME=DB_USERNAME"    >> ./container-test.env
          echo "DB_APP_PASSWORD=DB_PASSWORD" >> ./container-test.env
          echo "CONTAINER_IP_RANGE=172.19.10.%" >> ./container-test.env
          echo "MARIADB_DATA_VOL=${{ github.workspace }}/installed/mariadb/data" > ./interpolation-test.env
          echo "MARIADB_LOG_VOL=${{ github.workspace }}/installed/mariadb/log" >> ./interpolation-test.env

      - name: set up credentials for test
        working-directory: services/common/data
        run: |
            ln -s ./secrets_template.json  ./secrets.json
            ls -lt ./

      - name: run database test
        working-directory: services/store
        run: |
            docker compose --file ./infra/docker-compose-db-generic.yml --file ./infra/docker-compose-srv-generic.yml  --file ./infra/docker-compose-db-test.yml --file ./infra/docker-compose-srv-test.yml  --env-file ./infra/interpolation-test.env  --profile cleandbschema  up --detach
            python3 ${{ github.workspace }}/.github/docker_wait.py  --container-name storefront-test-db-schema-downgrade  --target-status exited --timeout-secs 660
            docker ps --all --filter name=storefront-*
            docker logs storefront-itest-0
            docker logs storefront-test-db-schema-upgrade --tail 30
            docker logs storefront-test-db-schema-downgrade --tail 30

      - name: Clean up containers database test
        if: always()
        working-directory: services/store
        run: |
            docker compose --file ./infra/docker-compose-db-generic.yml --file ./infra/docker-compose-srv-generic.yml  --file ./infra/docker-compose-db-test.yml --file ./infra/docker-compose-srv-test.yml  --env-file ./infra/interpolation-test.env  --profile cleandbschema  down --volumes

