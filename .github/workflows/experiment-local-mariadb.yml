name: experiment MariaDB local init

on:
  push:
    branches: ["experiment-github-action"]
    paths:
      - '.github/workflows/experiment-local-mariadb.yml'


jobs:
  init-env:
    runs-on: ubuntu-24.04
    services:
      mariadb_primary:
        image: mariadb:11.2.6
        ports:
          - 3307:3306
        env:
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: 0
          MARIADB_ROOT_PASSWORD: "syscidba"
          MARIADB_ROOT_HOST: "localhost"
          MARIADB_DATABASE: "test_db_whatever"
          MARIADB_USER: "DB_USERNAME"
          MARIADB_PASSWORD: "DB_PASSWORD"

    steps:
      - uses: actions/checkout@v4 # checkout codebase from github
      - name: Copy SQL File to Container then Restart MariaDB Service
        run: |
          ls -lt
          CONTAINER_ID=$(docker ps --filter "ancestor=mariadb:11.2.6" --format "{{.ID}}")
          docker cp ${{ github.workspace }}/.github/workflows/experiment-init-part01.sql  $CONTAINER_ID:/docker-entrypoint-initdb.d/experiment-init.sql
          docker restart $CONTAINER_ID
          docker exec $CONTAINER_ID ls -lt /var/lib/mysql  /docker-entrypoint-initdb.d

      
      - name: renew init sql and then Restart MariaDB Service again
        run: |
          CONTAINER_ID=$(docker ps --filter "ancestor=mariadb:11.2.6" --format "{{.ID}}")
          docker cp ${{ github.workspace }}/.github/workflows/experiment-init-part02.sql  $CONTAINER_ID:/docker-entrypoint-initdb.d/experiment-init.sql
          docker restart $CONTAINER_ID
          docker exec $CONTAINER_ID ls -lt /var/lib/mysql  /docker-entrypoint-initdb.d

      - name: Verify Secondary Database Creation
        run: |
          sudo apt-get update
          sudo apt-get install -y mariadb-client
          mariadb -h 127.0.0.1 --port=3307 --protocol=TCP --user=DB_USERNAME --password=DB_PASSWORD -e "SHOW DATABASES;"

          # still not work after init sql is executed in mariaDB container
          #mariadb -h 127.0.0.1 -P 3307 --protocol=TCP -uDB_USERNAME -pDB_PASSWORD -e "SHOW GRANTS FOR 'DB_USERNAME'@'localhost';"
